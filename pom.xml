<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.psi</groupId>
    <artifactId>wica-http</artifactId>
    <version>1.4.1</version>
    <packaging>jar</packaging>

    <name>wica-http</name>
    <description>WICA HTTP Server</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <!-- Use this definition to control which version of the Wica-JS library gets bundled into the Wica-HTTP fatJar. -->
        <!-- This definition always gets the latest release -->
        <!-- <wica-js-release>https://github.com/paulscherrerinstitute/wica-js/releases/latest/download/wica-js.zip</wica-js-release> -->
        <!-- This definition can be used to get a specific release -->
        <wica-js-release>https://github.com/paulscherrerinstitute/wica-js/releases/download/1.2.2/wica-js.zip</wica-js-release>
        <wica-js-md5>a5e4cee5cdc09f5e77422a9d2f9567cf</wica-js-md5>
        <!-- BUG FIX: 2020-01-12 -->
        <!-- The latest version of Tomcat is specified to get rid of an error message that occurs when navigating -->
        <!-- away from web pages. See this issue: https://github.com/codecentric/spring-boot-admin/issues/1039 -->
        <tomcat.version>9.0.30</tomcat.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.metrics</groupId>
            <artifactId>spring-metrics</artifactId>
            <version>0.5.1.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_common</artifactId>
            <version>0.0.26</version>
        </dependency>

        <dependency>
            <groupId>com.github.stephenc.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
            <version>1.0-1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <dependency>
            <groupId>org.epics</groupId>
            <artifactId>ca</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!-- Spring Boot enables Tomcat by default. This will need to be excluded if it is needed -->
            <!-- to run the Wica-HTTP server with some other embedded container (eg Undertow, see below) -->
            <!-- <exclusions> -->
            <!--     <exclusion> -->
            <!--         <groupId>org.springframework.boot</groupId> -->
            <!--         <artifactId>spring-boot-starter-tomcat</artifactId> -->
            <!--     </exclusion> -->
            <!-- </exclusions> -->
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- Enable this dependency to run the Wica-HTTP server with the Undertow embedded container. -->
        <!-- <dependency> -->
        <!--     <groupId>org.springframework.boot</groupId> -->
        <!--     <artifactId>spring-boot-starter-undertow</artifactId> -->
        <!-- </dependency> -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <version>3.3.3.RELEASE</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <plugins>
            <!-- This plugin downloads the Wica-JS library from the GitHub release area and unpacks -->
            <!-- it into the target directory for later bundling inside the release fatJar.         -->
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                    <!-- the wget goal actually binds itself into the 'process-resources' phase by   -->
                    <!-- default. It's overridden here to ensure that the wica-js asset is available -->
                    <!-- before the package gets built.                                              -->
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <uri>${wica-js-release}</uri>
                            <md5>${wica-js-md5}</md5>
                            <unpack>true</unpack>
                            <skipCache>true</skipCache>
                            <!-- By unpacking the payload in the classes area this ensure that -->
                            <!-- the release gets rebundled in the fatJar at a location where  -->
                            <!-- the Spring Boot environment will search for it.               -->
                            <outputDirectory>${project.build.directory}/classes/static/wica</outputDirectory>
                            <checkSignature>true</checkSignature>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <!-- Note: can optionally enable profile as shown below. -->
                        <!-- <profiles> -->
                        <!--     <profile>test</profile> -->
                        <!-- </profiles> -->
                        <!-- Note: if you want to obtain the application separately then  -->
                        <!-- one can just use the exec classifier below. The uber jar will -->
                        <!-- still be built, but it will have an '-exec' postfix. -->
                        <!-- <classifier>exec</classifier> -->
                    </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
            </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <compilerArgs>
                        <arg>-Xlint:all,-options,-path</arg>
                    </compilerArgs>
                    <release>11</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <additionalOptions>-html5</additionalOptions>
                    <show>package</show>
                    <!-- required in some build environments -->
                    <!-- <javadocExecutable>javadoc</javadocExecutable> -->
                    <tags>
                        <tag>
                            <name>implNote.</name>
                            <placement>a</placement>
                            <head>Implementation Note:</head>
                        </tag>
                    </tags>
                </configuration>
                <executions>
                    <execution>
                        <!-- Build a version of the javadoc in a directory with this specific release number -->
                        <id>javadoc-make-project-version</id>
                        <phase>package</phase>
                        <goals><goal>javadoc</goal></goals>
                        <configuration>
                            <quiet>true</quiet>
                            <destDir>latest</destDir>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Additionally build a version of the javadoc in a directory called 'latest' -->
                        <id>javadoc-make-latest</id>
                        <phase>package</phase>
                        <goals><goal>javadoc</goal></goals>
                        <configuration>
                            <destDir>${project.version}</destDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

    <!-- <distributionManagement> -->
    <!--     &lt;!&ndash; Note: releases could be uploaded to the PSI organisation's bintray area for -> -->
    <!--     &lt;!&ndash; further dissemination on the internet. This mechanism is not currently used. &ndash;&gt; -->
    <!--     <repository> -->
    <!--         <id>bintray-paulscherrerinstitute-wica</id> -->
    <!--         <name>paulscherrerinstitute-wica</name> -->
    <!--         <url>https://api.bintray.com/maven/paulscherrerinstitute/wica/wica-stream;publish=1</url> -->
    <!--     </repository> -->
    <!-- </distributionManagement> -->

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <distributionManagement>
        <repository>
            <id>artifacts.psi.ch</id>
            <name>artifacts.psi.ch-releases</name>
            <url>https://artifacts.psi.ch/artifactory/libs-releases-local</url>
        </repository>
        <snapshotRepository>
            <id>artifacts.psi.ch</id>
            <name>artifacts.psi.ch-snapshots</name>
            <url>https://artifacts.psi.ch/artifactory/libs-snapshots-local</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
