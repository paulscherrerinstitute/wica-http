# Wica-HTTP Docker Insecure RUN Profile
# =====================================

# Note: this profile is used when WICA is running inside a docker container and exposing
#       its services in non-secure (http) mode on port 80.

# Spring Boot Framework Configuration
# -----------------------------------

# The host the service will run on. This is the address that the Spring Boot internal
# Tomcat server will bind to. This is the Docker bridge IP.
# note: the address will increment by 1 for each configured service in the
# container.
server.address=                                              0.0.0.0

# The port the service will run on. This is the port that the Spring Boot internal
# Tomcat server will bind to.
server.port=                                                 80

# Turn off SSL
server.ssl.enabled=                                          false

# The logging configuration file. Currently uses Logback.
logging.config=                                              config/logback_config.xml

# Turn On/Off JSON "pretty printing" when returning JSON representations.
spring.jackson.serialization.indent-output=                  true

# Locations which SpringBoot will use for serving static content.
# The definition below caters for serving files bundled up as part of the Wica jar file which
# will be available on the class path when the application is run.
spring.resources.static-locations=                           classpath:static

# The definition below caters for serving the Wica-JS library and wica-related web pages from
# external directories.
#spring.resources.static-locations=                           file:/root/static/web_root,file:/root/static/wica_js_root

# The following definition turns on the cacheing policy. For the moment this is set
# very conservatively. Much more sophisticated policies are possible.
spring.resources.cache.cachecontrol.max-age=                 360s

# Wica Server data compression settings
# Note: it's important to be sure that the wica stream's main mode of operation
# - text/event-stream - is in this list !
server.compression.enabled=                                  true
server.compression.min-response-size=                        2048
server.compression.mime-types=                               application/json,application/xml,text/html,text/xml,text/plain,text/event-stream,application/javascript,text/css


# Application-Specific Configuration
# ----------------------------------

# Can be used to enable a test of logger performance when the application is started.
wica.test-logging-on-startup=                                     false

# The configuration for PSI's CA library when using it to establish channel access monitors.
wica.epics-ca-library-monitor-notifier-impl=                      BlockingQueueMultipleWorkerMonitorNotificationServiceImpl,16,10

# The configuration for PSI's CA library when logging.
wica.epics-ca-library-debug-level=                                800

# Whether an explicit get will be performed to read a channel's value when it first comes online.
wica.epics-get-channel-value-on-monitor-connect                   false

# Period after which the resources associated with a Wica Channel will be released if they are no
# longer in use.
wica.channel-resource-release-interval-in-secs                    60

# The number of values that can be held in the control system monitored value buffer before older values
# start getting thrown away.
wica.channel-monitored-value-buffer-size=                         64

# The number of values that can be held in the control system polled value buffer before older values
# start getting thrown away.
wica.channel-polled-value-buffer-size=                            64

# The default timeout in milliseconds to be applied when getting the current value of a wica channel.
wica.channel-get-timeout-interval-in-ms=                          3000

# The numeric scale in digits to be used
wica.channel-get-numeric-scale=                                   8

# Semicolon separated list specifying the default names of the fields that will be returned when getting the
# current value of a wica channel.
wica.channel-get-fields-of-interest=                              type;val;sevr;ts

# The default timeout in milliseconds to be applied when putting a new value to a wica channel.
wica.channel-put-timeout-interval-in-ms=                          3000

# Whether strict JSON compliance should be used when serializing NaN and Infinity values (=true) or
# whether JSON5 serialization compliance is acceptable (=false). For strict JSON compliance this
# option should be turned on. However, the Wica JS library supports JSON5 which allows greater
# flexibility, so for this reason the option is disabled.
wica.stream-quote-numeric-strings=                                false

# The fields of interest that should be serialized when sending the channel metadata.
# Currently (2019-08-22) this is everything but the WicaServerTimestamp (wsts) field.
wica.stream-metadata-fields-of-interest=                          type;egu;prec;hopr;lopr;drvh;drvl;hihi;lolo;high;low

#
# Additional Notes on CORS configuration:
#
# The definitions below control how the Wica-HTTP Server enters into so-called "CORS negotiation"
# with web browser clients to determine the browser's behaviour when a script loaded from website A
# attempts to make an HTTP request on a different website B.
#
# Note: this topic is of direct relevance to Wica webpage developers who may want to edit and
# load webpages from the local filesystem which subsequently make requests on the Wica-HTTP
# server.
#
# The default settings defined below do not impose any restrictions on the server-side. But note,
# the developer's web browsers may need their security settings configured (= reduced) to allow
# for cross-site working.  See the Mozilla developers notes for further information on CORS.
# https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
#
# Please google "Disable CORS in browser" to find the appropriate settings for the browser's
# that you wish to support.
#
# Whether the browser should send credentials, such as cookies along with cross domain requests,
# to the server's endpoints. The configured value is set on the Access-Control-Allow-Credentials
# response header of preflight requests.
wica.cors-allow-credentials=                                      true

# The list of allowed origins that be specific origins, e.g. "https://domain1.com", or "*" for all
# origins. A matched origin is listed in the Access-Control-Allow-Origin response header of preflight
# actual CORS requests.
wica.cors-allowed-origins=                                        *
